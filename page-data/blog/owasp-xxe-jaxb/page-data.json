{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/owasp-xxe-jaxb/","result":{"data":{"site":{"siteMetadata":{"author":{"name":"Johnathan Gilday"},"blogTitle":"/ gilday / blog"}},"markdownRemark":{"id":"24c2bc2c-007e-5f86-97ba-3ff04e7097c2","excerpt":"I work on a Java agent tool at Contrast Security that detects web application\nvulnerabilities at runtime. Recently, Contrast reported an XML External Entities‚Ä¶","html":"<p>I work on a Java agent tool at Contrast Security that detects web application\nvulnerabilities at runtime. Recently, Contrast reported an XML External Entities\n(XXE) vulnerability in a user‚Äôs web application that uses JAXB to parse XML. The\nuser questioned the validity of this vulnerability report. This user‚Äôs false\npositive claim sent me down the rabbit hole researching what I called Java XML\nHell. This research ultimately resulted in a change to\n<a href=\"https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html\">OWASP‚Äôs XXE Cheat Sheet</a>.\nI discovered that securing JAXB against XXE attacks is really difficult, and the\nContrast Java agent accurately reported the application to be vulnerable üôå.</p>\n<p>Before accepting our proposed changes, the OWASP XXE Cheat Sheet advised OpenJDK\n1.8 users that their JAXB applications are safe from XXE attacks. The advice\nread:</p>\n<blockquote>\n<p>Since JDK-8010393, which is in OpenJDK 8 beta 86,\n<code class=\"language-text\">javax.xml.bind.Unmarshaller</code> instances are safe by default. The other classes\nmentioned here are still unsafe by default in Java 8.</p>\n</blockquote>\n<p>While researching this issue, I discovered that an application parsing untrusted\nXML on an OpenJDK 1.8 runtime may be vulnerable to XXE when:</p>\n<ul>\n<li>the JAXB runtime has been inadvertently replaced with a different JAXB runtime\nthat is not safe-by-default (e.g. EclipseLink MOXy)</li>\n<li>the secure SAX parser that the OpenJDK 1.8 <code class=\"language-text\">Unmarshaller</code> uses has been\ninadvertently replaced with a different implementation that is not\nsafe-by-default (e.g. xercesImpl:2.8.0)</li>\n<li>the application uses one of the <code class=\"language-text\">unmarshal</code> overloads that does not delegate\nXML parsing to the safe-by-default SAX parser</li>\n</ul>\n<p>Given all of these caveats, I do not think that OpenJDK 1.8 users should assume\nthat their JAXB <code class=\"language-text\">Unmarshaller</code> is safe from XXE attacks by default.</p>\n<p>Contrast Security\n<a href=\"https://www.contrastsecurity.com/security-influencers/xml-xxe-pitfalls-with-jaxb\">published my research to its Security Influencer‚Äôs blog</a>,\nand\n<a href=\"https://github.com/OWASP/CheatSheetSeries/issues/488\">OWASP accepted my change request</a>\nto remove the misleading guidance from its XXE Cheat Sheet.</p>\n<p>This is not the first time I have written about securing XML and Java. Last\nyear, I wrote an article for Baeldung about how to\n<a href=\"https://www.baeldung.com/java-xstream-remote-code-execution\">secure XStream from Remote Code Exploitation</a>.\nOne thing I have learned at Contrast Security is that tracing the relationships\nbetween the various Java XML technologies and how to secure them is enough to\nmake anyone‚Äôs head spin!</p>","frontmatter":{"title":"üîí XML External Entity Pitfalls With JAXB","date":"September 16, 2020","description":"I spent a few weeks in \"Java XML Hell\", and I learned that securely parsing untrusted XML in Java is more difficult than it seems. Contrast Security published my research to its Security Influencers blog, and OWASP accepted my change request to remove misleading guidance from its XXE Cheat Sheet.\n"}}},"pageContext":{"slug":"/blog/owasp-xxe-jaxb/","previous":{"fields":{"slug":"/blog/macos-homebrew-openjdk/","sourceName":"blog"},"frontmatter":{"title":"üçé Installing and Managing Java on macOS"}},"next":{"fields":{"slug":"/blog/maven-toolchain-tests/","sourceName":"blog"},"frontmatter":{"title":"ü¶â Testing Across JDKs with Maven Toolchains"}}}}}