{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/maven-toolchain-tests/","result":{"data":{"site":{"siteMetadata":{"author":{"name":"Johnathan Gilday"},"blogTitle":"/ gilday / blog"}},"markdownRemark":{"id":"25297dbd-5299-549b-ab0e-6a84964f23e3","excerpt":"Some Maven users need to verify that their Java project is compatible with\nmultiple JDKs. Typically, users perform this testing by configuring their CI to\nre…","html":"<p>Some Maven users need to verify that their Java project is compatible with\nmultiple JDKs. Typically, users perform this testing by configuring their CI to\nre-run their Maven build with each such JDK. This works, but there are some\ndownsides:</p>\n<ul>\n<li>\n<p><strong>Restarting the whole build is slow.</strong> You only want to re-run the tests, but\nre-running the build means you have to re-run phases prior to the testing\nphase as well. If you’re running integration tests, this means recompiling and\nrepackaging you application each time.</p>\n</li>\n<li>\n<p><strong>Your entire Maven build must be compatible with each JDK version you need to\ntest with.</strong> Suppose you want to test your application with JDK 1.7, but you\nrely on Maven plugins that require JDK 1.8. When you re-run the Maven build\nwith JDK 1.7, those Maven plugins will not work.</p>\n</li>\n<li>\n<p><strong>Rebuilding the artifact reduces fidelity in testing.</strong> Your goal is to test\nthe Java artifacts you intend to release. However, when you re-run the build,\nyou produce new artifacts each time. There’s little chance this will lead to\nmeaningful incompatibilities, but why leave it to chance.</p>\n</li>\n</ul>\n<h2>Configuring Maven Toolchains</h2>\n<p><a href=\"https://maven.apache.org/guides/mini/guide-using-toolchains.html\">Maven’s Toolchains feature</a>\nhelps users include different JDKs throughout their build. This helps to\nseparate your build’s JDK requirements from the JDK you use to compile and test\nyour code. In this post, we’ll configure a Maven build to run integration tests\nwith multiple JDKs using Maven Toolchains.</p>\n<p>Before you can use Maven Toolchains, you must have\n<a href=\"https://maven.apache.org/ref/3.8.1/maven-core/toolchains.html\">configured a toolchains.xml</a>.\nThe file belongs in <code class=\"language-text\">$M2_HOME/toolchains.xml</code>. This example has two JDKs\ndefined:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>toolchains</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- JDK toolchains --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>toolchain</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span>jdk<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>provides</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>vendor</span><span class=\"token punctuation\">></span></span>eclipse<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>vendor</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>provides</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>jdkHome</span><span class=\"token punctuation\">></span></span>/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>jdkHome</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>toolchain</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>toolchain</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span>jdk<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>provides</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>vendor</span><span class=\"token punctuation\">></span></span>eclipse<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>vendor</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>provides</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>jdkHome</span><span class=\"token punctuation\">></span></span>/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>jdkHome</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>toolchain</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>toolchains</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>Configuring Multiple Test Runs</h2>\n<p>Maven runs unit tests with the Maven Surefire Plugin and integration tests with\nthe Maven Failsafe Plugin. Both of these plugins work with the Maven Toolchains\nfeature, and both may be configured to run the test suite multiple times with\ndifferent JDKs.</p>\n<p>In this example, we’ll configure the Maven Failsafe Plugin to run integration\ntests on JDKs 1.8 and 11. This is done by adding two distinct executions to the\nplugin (distinguished by the execution ID) that use different toolchains.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>maven-failsafe-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>jdk-1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">></span></span>integration-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">></span></span>verify<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>jdkToolchain</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>jdkToolchain</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>jdk-11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">></span></span>integration-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">></span></span>verify<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>jdkToolchain</span><span class=\"token punctuation\">></span></span>11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>jdkToolchain</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executions</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Note that this only works with the 3.x releases of the Maven Surefire and\nFailsafe plugins. If you try this with the 2.x releases, then Maven will run the\nfirst execution and skip the second one with a message like:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[INFO] --- maven-failsafe-plugin:2.22.2:integration-test (jdk-11) @ maven-toolchains-testing ---\n[INFO] Skipping execution of surefire because it has already been run for this configuration</code></pre></div>\n<p>Having configured the Maven Failsafe Plugin with multiple executions, we can run\n<code class=\"language-text\">mvn verify</code> and note that the build output shows both executions:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">INFO] --- maven-failsafe-plugin:3.0.0-M5:integration-test (jdk-1.8) @ maven-toolchains-testing ---\n[INFO] Toolchain in maven-failsafe-plugin: JDK[/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home]\n[INFO]\n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running com.github.gilday.AppIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.036 s - in com.github.gilday.AppIT\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO]\n[INFO] --- maven-failsafe-plugin:3.0.0-M5:integration-test (jdk-11) @ maven-toolchains-testing ---\n[INFO] Toolchain in maven-failsafe-plugin: JDK[/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home]\n[INFO]\n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running com.github.gilday.AppIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.034 s - in com.github.gilday.AppIT\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO]\n[INFO] --- maven-failsafe-plugin:3.0.0-M5:verify (jdk-1.8) @ maven-toolchains-testing ---\n[INFO]\n[INFO] --- maven-failsafe-plugin:3.0.0-M5:verify (jdk-11) @ maven-toolchains-testing ---</code></pre></div>\n<h2>Trade-Offs</h2>\n<p>We’ve already discussed the downsides of re-running Maven with different JDKs to\ntest across JDKs. Now, let’s consider the downside of this approach.</p>\n<p>When users configure their CI build to re-run Maven using different JDKs, they\ncan often configure the CI to run these distinct Maven builds in parallel. This\nalleviates the build time problem, because each build happens concurrently.</p>\n<p>With the Maven Toolchains strategy, we cannot run the tests across different\nJDKs concurrently. Maven’s multi-threaded build feature is limited to building\nmodules in the reactor concurrently: it does not provide concurrent building\nwithin a module (as Gradle does). One way to workaround this is to put each\nintegration test suite in its own Maven module (in a multi-module project) so\nthat the multi-threaded build system can run them in parallel. However, this\nconfiguration introduces a lot of boilerplate <code class=\"language-text\">pom.xml</code> code.</p>\n<h2>Conclusion</h2>\n<p>Maven’s Toolchains feature is great for separating your build’s JDK requirements\nfrom your code’s JDK requirements. We demonstrated how to use Maven Toolchains\nto re-run integration tests on multiple JDKs in a single Maven build. The code\nfor this example can be found on GitHub in\n<a href=\"https://github.com/gilday/maven-toolchains-testing\">gilday/maven-toolchains-testing</a>.</p>","frontmatter":{"title":"🦉 Testing Across JDKs with Maven Toolchains","date":"June 10, 2021","description":"Maven users who want to test their Java projects against different JDKs often do so by re-running their Maven build with each such JDK. Maven's Toolchains plugin offers an alternative strategy for testing across JDKs.\n"}}},"pageContext":{"slug":"/blog/maven-toolchain-tests/","previous":{"fields":{"slug":"/blog/owasp-xxe-jaxb/","sourceName":"blog"},"frontmatter":{"title":"🔒 XML External Entity Pitfalls With JAXB"}},"next":null}},"staticQueryHashes":["2841359383","614056702"]}