{"version":3,"sources":["webpack:///./src/pages/blog.tsx"],"names":["BlogIndex","data","location","posts","allMarkdownRemark","edges","title","site","siteMetadata","blogTitle","author","name","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"8OA4EeA,UAzCG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAQF,EAAKG,kBAAkBC,MAErC,OACE,YAAC,IAAD,CACEH,SAAUA,EACVI,MAAOL,EAAKM,KAAKC,aAAaC,UAC9BC,OAAQT,EAAKM,KAAKC,aAAaE,OAAOC,MAEtC,YAAC,IAAD,CAAKL,MAAM,cACX,YAAC,IAAD,MACCH,EAAMS,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,uBAASC,IAAKJ,EAAKE,OAAOC,MACxB,0BACE,kBACEE,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,YAAC,IAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUC,GAAIT,EAAKE,OAAOC,MACjDV,IAGL,yBAAQO,EAAKC,YAAYS,OAE3B,2BACE,iBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,kBAaxD,IAAMC,EAAY","file":"component---src-pages-blog-tsx-04ea8b1060e7a43fe353.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/blog/bio\"\nimport Layout from \"../components/blog/layout\"\nimport { rhythm } from \"../components/blog/typography\"\nimport SEO from \"../components/seo\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      author: {\n        name: string\n      }\n      blogTitle: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout\n      location={location}\n      title={data.site.siteMetadata.blogTitle}\n      author={data.site.siteMetadata.author.name}\n    >\n      <SEO title=\"All posts\" />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author {\n          name\n        }\n        blogTitle\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { sourceName: { eq: \"blog\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}