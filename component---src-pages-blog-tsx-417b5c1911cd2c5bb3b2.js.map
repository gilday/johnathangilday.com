{"version":3,"file":"component---src-pages-blog-tsx-417b5c1911cd2c5bb3b2.js","mappings":"8LA4EA,UAzCkB,SAAC,GAAyC,IAAvCA,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAQF,EAAKG,kBAAkBC,MAErC,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAD,CACEL,SAAUA,EACVM,MAAOP,EAAKQ,KAAKC,aAAaC,UAC9BC,OAAQX,EAAKQ,KAAKC,aAAaE,OAAOC,OAEtCP,EAAAA,EAAAA,IAACQ,EAAAA,EAAD,CAAKN,MAAM,eACXF,EAAAA,EAAAA,IAACS,EAAAA,EAAD,MACCZ,EAAMa,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNT,EAAQS,EAAKC,YAAYV,OAASS,EAAKE,OAAOC,KACpD,OACEd,EAAAA,EAAAA,IAAAA,UAAAA,CAASe,IAAKJ,EAAKE,OAAOC,OACxBd,EAAAA,EAAAA,IAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAAA,KAAAA,CACEgB,MAAO,CACLC,cAAcC,EAAAA,EAAAA,IAAO,EAAI,MAG3BlB,EAAAA,EAAAA,IAACmB,EAAAA,GAAD,CAAMH,MAAO,CAAEI,UAAU,QAAWC,GAAIV,EAAKE,OAAOC,MACjDZ,KAGLF,EAAAA,EAAAA,IAAAA,QAAAA,KAAQW,EAAKC,YAAYU,QAE3BtB,EAAAA,EAAAA,IAAAA,UAAAA,MACEA,EAAAA,EAAAA,IAAAA,IAAAA,CACEuB,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,YAnBxD,IAXP,C","sources":["webpack://johnathangilday/./src/pages/blog.tsx"],"sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/blog/bio\"\nimport Layout from \"../components/blog/layout\"\nimport { rhythm } from \"../components/blog/typography\"\nimport SEO from \"../components/seo\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      author: {\n        name: string\n      }\n      blogTitle: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout\n      location={location}\n      title={data.site.siteMetadata.blogTitle}\n      author={data.site.siteMetadata.author.name}\n    >\n      <SEO title=\"All posts\" />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author {\n          name\n        }\n        blogTitle\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { sourceName: { eq: \"blog\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","posts","allMarkdownRemark","edges","___EmotionJSX","Layout","title","site","siteMetadata","blogTitle","author","name","SEO","Bio","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","Link","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}